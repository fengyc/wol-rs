name: build-all

on:
  workflow_call:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-gnueabi
          - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-musleabihf
          - armv5te-unknown-linux-gnueabi
          - armv5te-unknown-linux-musleabi
          - armv7-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabi
          - armv7-unknown-linux-musleabihf
          - i586-unknown-linux-gnu
          - i586-unknown-linux-musl
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          # - mips-unknown-linux-gnu
          # - mips-unknown-linux-musl
          # - mips64-unknown-linux-gnuabi64
          # - mips64-unknown-linux-muslabi64
          # - mips64el-unknown-linux-gnuabi64
          # - mips64el-unknown-linux-muslabi64
          # - mipsel-unknown-linux-gnu
          # - mipsel-unknown-linux-musl
          - powerpc-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - riscv64gc-unknown-linux-gnu
          - s390x-unknown-linux-gnu
          - sparc64-unknown-linux-gnu
          - thumbv7neon-unknown-linux-gnueabihf
          - x86_64-unknown-linux-gnu
          #- x86_64-unknown-linux-gnux32
          - x86_64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Rust cache
      - uses: Swatinem/rust-cache@v2

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      # Latest cross instead of the old in crate.io
      - run: cargo install cross --git https://github.com/cross-rs/cross

      # Build, need to clean and build again if failed
      - name: Build
        env:
          TARGET: ${{ matrix.target }}
        run: |
          cross build --release --target $TARGET --features=bin || (cargo clean && cross build --release --target $TARGET --features=bin)

      - name: Rename
        env:
          TARGET: ${{ matrix.target }}
        run: mv target/$TARGET/release/wol target/$TARGET/release/wol-$TARGET

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wol-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/wol-${{ matrix.target }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Rust cache
      - uses: Swatinem/rust-cache@v2

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build
        run: |
          cargo build --release --features=bin

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wol-windows
          path: target/release/wol.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Rust cache
      - uses: Swatinem/rust-cache@v2

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Build
        run: |
          cargo build --release --features=bin

      - run: |
          mv target/release/wol target/release/wol-macos

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wol-macos
          path: target/release/wol-macos
